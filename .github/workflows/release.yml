on:
  push:
    tags:
      - 'test'
      # - 'v*+'

name: Create kernel release and upload binaries

jobs:
  build-arch:
    name: Build Arch Linux Kernel
    runs-on: ubuntu-latest
    container: archlinux
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: |
          cd pkg/arch/kernel

          # Create build user (can't makepkg as root)
          useradd -m -g wheel -s /bin/bash build
          echo "build ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
          chown -R build:wheel .

          # Install makepkg deps
          pacman -Sy sudo binutils fakeroot grep base-devel git --noconfirm

          # Package compression settings (Matches latest Arch)
          export PKGEXT='.pkg.tar.zst'
          export COMPRESSZST=(zstd -c -T0 --ultra -20 -)
          export MAKEFLAGS="-j2"

          # Build
          su build --pty -p -s /bin/bash -c 'makepkg -f --syncdeps --skippgpcheck --noconfirm'

      - name: Prepare Release
        run: |
          mkdir release
          mv pkg/arch/kernel/*.pkg.tar.zst release

      - name: Sign Packages
        env:
          GPG_KEY: ${{ secrets.GITHUB_GPG_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GITHUB_GPG_PASSPHRASE }}
        run: |
          cd release

          # import GPG key
          echo "$GPG_KEY" | base64 -d | gpg --import --no-tty --batch --yes
          export GPG_TTY=$(tty)

          # sign packages
          ls *.pkg.tar.zst | xargs -L1 gpg --detach-sign --batch --no-tty --pinentry-mode=loopback --passphrase $GPG_PASSPHRASE -u 5B574D1B513F9A05

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: arch-latest
          path: release

  build-fedora:
    name: Build Fedora Kernel
    runs-on: ubuntu-latest
    container: fedora:31
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Decrypt certificates
      env:
        LS_PASSWORD: ${{ secrets.LS_PASSWORD }}
      run: |
        pushd pkg/secrets
          ./decrypt.sh -p "$LS_PASSWORD" -f gpg/surface_gpg.key.gpg
          ./decrypt.sh -p "$LS_PASSWORD" -f sb/surface_sb.key.gpg
        popd

    - name: Install certificates
      run: |
        gpg --no-tty --batch --yes --import pkg/secrets/gpg/surface_gpg.key
        cp pkg/secrets/sb/surface_sb.key pkg/fedora/kernel-surface/surface.key
        cp pkg/secrets/sb/surface_sb.crt pkg/fedora/kernel-surface/surface.crt

    - name: Install build dependencies
      run: |
        dnf distro-sync -y
        dnf install -y rpmdevtools rpm-sign
        dnf builddep pkg/fedora/kernel-surface/kernel-surface.spec

    - name: Build packages
      run: |
        pushd pkg/fedora/kernel-surface
          ../makerpm -sk linux-surface
        popd

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: fedora-latest
        path: pkg/fedora/kernel-surface/out/x86_64

  release:
    name: Create and Upload Release
    needs: [build-arch]
    runs-on: ubuntu-latest
    steps:
      - name: Download Arch Linux artifacts
        uses: actions/download-artifact@v1
        with:
          name: arch-latest

      - name: Download Fedora artifacts
        uses: actions/download-artifact@v1
        with:
          name: fedora-latest

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_BOT_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload Assets to Release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_BOT_TOKEN }}
          file: ./*-latest/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
